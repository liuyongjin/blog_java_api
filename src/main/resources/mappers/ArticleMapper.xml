<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.model.dao.ArticleMapper">
    <resultMap id="BaseResultMap" type="com.example.demo.model.pojo.Article">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="des" jdbcType="VARCHAR" property="des"/>
        <result column="main_img" jdbcType="VARCHAR" property="main_img"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <result column="comment_count" jdbcType="INTEGER" property="comment_count"/>
        <result column="praise_count" jdbcType="INTEGER" property="praise_count"/>
        <result column="browse_count" jdbcType="INTEGER" property="browse_count"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="create_time"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="update_time"/>
        <result column="delete_time" jdbcType="TIMESTAMP" property="delete_time"/>
    </resultMap>
    <sql id="Base_Column_List">
        id
        ,title,status,des,main_img,content,comment_count,praise_count,browse_count, create_time, update_time,delete_time
    </sql>
    <select id="selectArticleList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from blog_article
        -- select a.title,a.status,a.des from blog_tag_article as ta left join blog_article as a on a.id=ta.article_id
        -- left join blog_tag as t on t.id=ta.tag_id
    </select>

    <select id="selectShelvesArticleList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from blog_article
        where status = 1
    </select>

    <select id="selectArticleById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from blog_article where id = #{id, jdbcType=INTEGER}
    </select>

    <select id="selectArticleByTitleOrTags" parameterType="java.lang.String"
            resultType="com.example.demo.model.pojo.Article">
        -- select a.*, (select group_concat(name) from blog_tag where id = ta.tag_id) as tags
        select a.*
        from blog_article a
        left join blog_tag_article ta on a.id = ta.article_id
        <where>
            <if test="title != null">
                a.title like #{title}
            </if>
            <if test="tag_ids != null">
                and ta.tag_id in
                <foreach collection="tag_ids" close=")" item="item" open="(" separator=",">
                    #{item}
                </foreach>
            </if>
            and a.status = 1
        </where>

    </select>

    <select id="selectArticleListByTimeDesc" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from blog_article
        <where>
            <if test="start_time != null &amp;&amp; end_time != null ">
                create_time between #{start_time} and #{end_time}
            </if>
        </where>
        order by create_time desc
    </select>

    <select id="selectRandomArticle" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from blog_article
        order by rand()
    </select>

    <insert id="addArticle" parameterType="com.example.demo.model.dto.ArticleDTO">
        insert into blog_article
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="title != null">
                title,
            </if>
            <if test="status != null">
                `status`,
            </if>
            <if test="des != null">
                des,
            </if>
            <if test="main_img != null">
                main_img,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="comment_count != null">
                comment_count,
            </if>
            <if test="praise_count != null">
                praise_count,
            </if>
            <if test="browse_count != null">
                browse_count,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="des != null">
                #{des,jdbcType=VARCHAR},
            </if>
            <if test="main_img != null">
                #{main_img,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                #{content,jdbcType=VARCHAR},
            </if>
            <if test="comment_count != null">
                #{comment_count,jdbcType=INTEGER},
            </if>
            <if test="praise_count != null">
                #{praise_count,jdbcType=INTEGER},
            </if>
            <if test="browse_count != null">
                #{browse_count,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <update id="updateArticle" parameterType="com.example.demo.model.pojo.Article">
        update blog_article
        <set>
            <if test="title != null">
                title = #{title, jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status, jdbcType=INTEGER},
            </if>
            <if test="des != null">
                des = #{des, jdbcType=VARCHAR},
            </if>
            <if test="main_img != null">
                main_img = #{main_img, jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                content = #{content, jdbcType=VARCHAR},
            </if>
            <if test="comment_count != null">
                comment_count = #{comment_count, jdbcType=INTEGER},
            </if>
            <if test="praise_count != null">
                praise_count = #{praise_count, jdbcType=INTEGER},
            </if>
            <if test="browse_count != null">
                browse_count = #{browse_count, jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <delete id="delArticle" parameterType="java.lang.Integer">
        delete
        from blog_article
        where id = #{id, jdbcType=INTEGER}
    </delete>

    <delete id="batchDelArticle" parameterType="java.lang.String">
        delete from blog_article
        where id in
        <foreach collection="ids" close=")" item="id" open="(" separator=",">
            #{id}
        </foreach>
    </delete>
</mapper>