<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.model.dao.PermissionMapper">
    <resultMap id="BaseResultMap" type="com.example.demo.model.pojo.Permission">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="value" jdbcType="VARCHAR" property="value"/>
        <result column="menu_id" jdbcType="INTEGER" property="menu_id"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="create_time"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="update_time"/>
        <result column="delete_time" jdbcType="TIMESTAMP" property="delete_time"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, name, value, menu_id, create_time, update_time, delete_time
    </sql>
    <select id="findPermissionByUserName" parameterType="java.lang.Integer" resultType="com.example.demo.model.pojo.Permission">
        select p.*, m.menu_name, m.menu_desc, m.menu_url, m.parent_id, r.id as role_id, r.role_name, r.role_desc
        from blog_user u
        inner join blog_user_role ur on u.id = ur.user_id
        inner join blog_role r on ur.role_id = r.id
        inner join blog_role_permission rp on ur.role_id = rp.role_id
        inner join blog_permission p on rp.permission_id = p.id
        inner join blog_menu m on p.menu_id = m.id
        where u.id = #{id,jdbcType=INTEGER}
    </select>
</mapper>